plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'kr'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
bootJar{
	jar.enabled = false
	archiveFileName = 'myapp.jar'
}

jar{
	manifest {
		attributes 'Main-Class': 'kr.nyamnyam.helloworld.HelloWorldApplication'
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
// QueryDSL 의존성
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// Spring Boot 스타터
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok (컴파일 타임 의존성)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MySQL Connector
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Spring Boot DevTools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 테스트 관련 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.9.3'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

	// Swagger 설정을 위한 Springdoc OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

tasks.named('test') {
	useJUnitPlatform()
}
