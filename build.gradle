plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'

}

group = 'kr'
version = '0.0.1-SNAPSHOT'


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// QueryDSL 의존성
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// Spring Boot 스타터
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'


	// Lombok (컴파일 타임 의존성)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MySQL Connector
//	runtimeOnly 'com.mysql:mysql-connector-j'

	// Spring Boot DevTools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 테스트 관련 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.9.3'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

	// Swagger 설정을 위한 Springdoc OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// Jsoup 크롤링 라이브러리 의존성
	implementation 'org.jsoup:jsoup:1.16.1'

	// Selenium 의존성 추가
	implementation 'org.seleniumhq.selenium:selenium-java:4.14.0'

	// 클라우드 스토리지 사용을 위한 AWS SDK S3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.300'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

}

ext {
	querydslVersion = '5.0.0' // 최신 QueryDSL 버전으로 설정
}

// QueryDSL 설정
def generated = 'build/generated'

// QueryDSL QClass 파일 생성 위치 지정
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(generated)
}

sourceSets {
	main.java.srcDirs += [generated]
}

clean {
	delete file(generated)
}

bootJar{
	jar.enabled=true
	archiveFileName="${rootProject.name}.jar"
}

tasks.named('test') {
	useJUnitPlatform()
}

